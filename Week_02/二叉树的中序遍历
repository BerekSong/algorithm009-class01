class Solution {
    //递归
    //时间复杂度：O(n)。递归函数 T(n)=2⋅T(n/2)+1。
    //空间复杂度：最坏情况下需要空间O(n)，平均情况为O(logn)。
    public List<Integer> inorderTraversal(TreeNode root) {
        List<Integer> res  = new ArrayList<>();
        recursion(root, res);
        return res;
    }
    private void recursion(TreeNode root, List<Integer> list) {
        if (root != null) {
            if (root.left != null)
                recursion(root.left, list);
            list.add(root.val);
            if (root.right != null)
                recursion(root.right, list);
        }
    }
}
